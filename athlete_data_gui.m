function athlete_data_gui
    % Create a figure for the GUI
    fig = uifigure('Name', 'Athlete Data Input', 'Position', [100, 100, 500, 700]);

    % Create a scrollable panel
    scrollPanel = uipanel(fig, ...
        'Scrollable', 'on', ...
        'Units', 'normalized', ...
        'Position', [0, 0, 1, 1]);

    % Add a title as a label (centered, slightly lower)
    uilabel(scrollPanel, ...
        'Text', 'Athlete Data Input', ...
        'FontSize', 18, ...
        'FontWeight', 'bold', ...
        'HorizontalAlignment', 'center', ...
        'Position', [100, 920, 300, 100]);

    % Field names
    labels = {'Gender:', 'Age:', 'Height:', 'Weight:', 'Sport:', ...
              'Weekly Training Hours:', 'Training Intensity:', ...
              'Physical Conditioning:', 'Nutrition Score:', ...
              'Previous Injuries:'};
          
    % Create UI components dynamically
    numFields = numel(labels);
    components = cell(1, numFields); % Store input components

    % Starting Y position for the first prompt
    yPos = 890; 
    ySpacing = 70; % Space between rows

    for i = 1:numFields
        % Create a label
        uilabel(scrollPanel, 'Text', labels{i}, ...
                'FontWeight', 'bold', ...
                'FontSize', 14, ...
                'Position', [20, yPos - (i-1)*ySpacing, 200, 30], ...
                'HorizontalAlignment', 'left');
    end

    % Create specific input types for each field
    % Gender (Dropdown with watermark)
    components{1} = uidropdown(scrollPanel, ...
        'Items', {'Select Gender', 'Male', 'Female'}, ...
        'Value', 'Select Gender', ...
        'Position', [240, yPos - 0*ySpacing, 200, 30]);

    % Age (Slider)
    components{2} = uislider(scrollPanel, ...
        'Limits', [7, 100], ...
        'MajorTicks', 7:10:100, ...
        'Position', [240, yPos - 1*ySpacing + 15, 200, 3]);

    % Height (Slider)
    components{3} = uislider(scrollPanel, ...
        'Limits', [50, 210], ...
        'MajorTicks', 50:20:210, ...
        'Position', [240, yPos - 2*ySpacing + 15, 200, 3]);

    % Weight (Slider)
    components{4} = uislider(scrollPanel, ...
        'Limits', [20, 130], ...
        'MajorTicks', 20:10:130, ...
        'Position', [240, yPos - 3*ySpacing + 15, 200, 3]);

    % Sport (Dropdown with watermark)
    components{5} = uidropdown(scrollPanel, ...
        'Items', {'Select Sport', 'Gymnastics', 'Soccer', 'Basketball', 'Swimming', 'Running', 'Other'}, ...
        'Value', 'Select Sport', ...
        'Position', [240, yPos - 4*ySpacing, 200, 30]);

    % Weekly Training Hours (Slider)
    components{6} = uislider(scrollPanel, ...
        'Limits', [0, 28], ...
        'MajorTicks', 0:4:28, ...
        'Position', [240, yPos - 5*ySpacing + 15, 200, 3]);

    % Training Intensity (Dropdown with watermark)
    components{7} = uidropdown(scrollPanel, ...
        'Items', {'Select Intensity', 'Low', 'Moderate', 'High'}, ...
        'Value', 'Select Intensity', ...
        'Position', [240, yPos - 6*ySpacing, 200, 30]);

    % Physical Conditioning (Slider)
    components{8} = uislider(scrollPanel, ...
        'Limits', [0, 10], ...
        'MajorTicks', 0:2:10, ...
        'Position', [240, yPos - 7*ySpacing + 15, 200, 3]);

    % Nutrition Score (Slider)
    components{9} = uislider(scrollPanel, ...
        'Limits', [0, 10], ...
        'MajorTicks', 0:2:10, ...
        'Position', [240, yPos - 8*ySpacing + 15, 200, 3]);

    % Previous Injuries (Slider)
    components{10} = uislider(scrollPanel, ...
        'Limits', [0, 20], ...
        'MajorTicks', 0:5:20, ...
        'Position', [240, yPos - 9*ySpacing + 15, 200, 3]);

    % Add a button to save data
    uibutton(scrollPanel, 'Text', 'Save Data', ...
             'Position', [200, yPos - 10*ySpacing, 100, 40], ...
             'ButtonPushedFcn', @(btn,event)saveData());
         
    % Cell array to store data
    dataCell = cell(1, numFields);
    
    % Callback function to save data
    function saveData
        for j = 1:numFields
            if isa(components{j}, 'matlab.ui.control.Slider')
                % Get slider value
                dataCell{j} = components{j}.Value;
            else
                % Get dropdown or other component value
                dataCell{j} = components{j}.Value;
            end
        end

        % Save data to a .mat file
        save('athlete_data.mat', 'dataCell');

        % Close the GUI
        close(fig);
    end
end
